{"version":3,"sources":["webpack:///./src/pages/blog/all.html.js","webpack:///./src/components/TitleAndMetaTags/index.js","webpack:///./src/components/TitleAndMetaTags/TitleAndMetaTags.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Header/Header.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/utils/toCommaSeparatedList.js"],"names":["pageQuery","AllBlogPosts","_ref","data","location","Glamor","createElement","components_Layout__WEBPACK_IMPORTED_MODULE_2__","components_Container__WEBPACK_IMPORTED_MODULE_3__","css","sharedStyles","articleLayout","container","content","components_Header__WEBPACK_IMPORTED_MODULE_4__","components_TitleAndMetaTags__WEBPACK_IMPORTED_MODULE_5__","ogUrl","urlRoot","title","display","flexWrap","marginLeft","allMarkdownRemark","edges","map","_ref2","_ref3","node","paddingLeft","paddingTop","borderTop","paddingBottom","width","media","size","greaterThan","key","fields","slug","fontSize","color","colors","dark","lineHeight","fontWeight","gatsby__WEBPACK_IMPORTED_MODULE_1__","borderBottom",":hover","borderBottomColor","black","to","frontmatter","templates_components_MetaTitle__WEBPACK_IMPORTED_MODULE_10__","date","author","subtle","marginTop","toCommaSeparatedList","name","_TitleAndMetaTags__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","TitleAndMetaTags","react_helmet__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_0___default","n","ogDescription","a","property","_Header__WEBPACK_IMPORTED_MODULE_0__","Header","children","Object","assign","marginRight","fonts","header","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","addString","list","string","push","length","array","renderCallback","forEach","item","index"],"mappings":"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","file":"component---src-pages-blog-all-html-js-63ddfe562d67fc682f3c.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport {graphql, Link} from 'gatsby';\nimport Layout from 'components/Layout';\nimport Container from 'components/Container';\nimport Header from 'components/Header';\nimport TitleAndMetaTags from 'components/TitleAndMetaTags';\nimport React from 'react';\nimport {urlRoot} from 'site-constants';\nimport {colors, media, sharedStyles} from 'theme';\nimport toCommaSeparatedList from 'utils/toCommaSeparatedList';\nimport MetaTitle from 'templates/components/MetaTitle';\n\nimport type {allMarkdownRemarkData} from 'types';\n\ntype Props = {\n  data: allMarkdownRemarkData,\n  location: Location,\n};\n\nconst AllBlogPosts = ({data, location}: Props) => (\n  <Layout location={location}>\n    <Container>\n      <div css={sharedStyles.articleLayout.container}>\n        <div css={sharedStyles.articleLayout.content}>\n          <Header>All Posts</Header>\n          <TitleAndMetaTags\n            ogUrl={`${urlRoot}/blog/all.html`}\n            title=\"React - All Posts\"\n          />\n          <ul\n            css={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              marginLeft: -40,\n            }}>\n            {data.allMarkdownRemark.edges.map(({node}) => (\n              <li\n                css={{\n                  paddingLeft: 40,\n                  paddingTop: 40,\n                  borderTop: '1px dotted #ececec',\n                  paddingBottom: 40,\n                  width: '100%',\n\n                  [media.size('medium')]: {\n                    width: '50%',\n                  },\n\n                  [media.greaterThan('large')]: {\n                    width: '33.33%',\n                  },\n                }}\n                key={node.fields.slug}>\n                <h2\n                  css={{\n                    fontSize: 24,\n                    color: colors.dark,\n                    lineHeight: 1.3,\n                    fontWeight: 700,\n                  }}>\n                  <Link\n                    css={{\n                      borderBottom: '1px solid #ececec',\n                      ':hover': {\n                        borderBottomColor: colors.black,\n                      },\n                    }}\n                    key={node.fields.slug}\n                    to={node.fields.slug}>\n                    {node.frontmatter.title}\n                  </Link>\n                </h2>\n                <MetaTitle>{node.fields.date}</MetaTitle>\n                {node.frontmatter.author ? (\n                  <div\n                    css={{\n                      color: colors.subtle,\n                      marginTop: -5,\n                    }}>\n                    by{' '}\n                    {toCommaSeparatedList(node.frontmatter.author, author => (\n                      <span key={author.frontmatter.name}>\n                        {author.frontmatter.name}\n                      </span>\n                    ))}\n                  </div>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Container>\n  </Layout>\n);\n\nexport const pageQuery = graphql`\n  query AllBlogPostsPageQuery {\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/blog/\"}}\n      sort: {fields: [fields___date], order: DESC}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            author {\n              frontmatter {\n                name\n                url\n              }\n            }\n          }\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AllBlogPosts;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n */\n\nimport TitleAndMetaTags from './TitleAndMetaTags';\n\nexport default TitleAndMetaTags;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport Helmet from 'react-helmet';\nimport React from 'react';\n\nconst defaultDescription =\n  'JavaScript-библиотека для создания пользовательских интерфейсов';\n\ntype Props = {\n  title: string,\n  ogDescription: string,\n  ogUrl: string,\n};\n\nconst TitleAndMetaTags = ({title, ogDescription, ogUrl}: Props) => {\n  return (\n    <Helmet title={title}>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      {ogUrl && <meta property=\"og:url\" content={ogUrl} />}\n      <meta property=\"og:image\" content=\"/logo-og.png\" />\n      <meta\n        property=\"og:description\"\n        content={ogDescription || defaultDescription}\n      />\n      <meta property=\"fb:app_id\" content=\"623268441017527\" />\n    </Helmet>\n  );\n};\n\nexport default TitleAndMetaTags;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n */\n\nimport Header from './Header';\n\nexport default Header;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport React from 'react';\nimport {colors, fonts} from 'theme';\n\nimport type {Node} from 'react';\n\nconst Header = ({children}: {children: Node}) => (\n  <h1\n    css={{\n      color: colors.dark,\n      marginRight: '5%',\n      ...fonts.header,\n    }}>\n    {children}\n  </h1>\n);\n\nexport default Header;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport React from 'react';\n\nimport type {Node} from 'react';\n\nconst addString = (list: Array<Node>, string: string) =>\n  list.push(<span key={`${list.length}-${string}`}>{string}</span>);\n\nconst toCommaSeparatedList = (\n  array: Array<any>,\n  renderCallback: Function,\n): Array<any> => {\n  if (array.length <= 1) {\n    return array.map(renderCallback);\n  }\n\n  const list = [];\n\n  array.forEach((item, index) => {\n    if (index === array.length - 1) {\n      addString(list, array.length === 2 ? ' and ' : ', and ');\n      list.push(renderCallback(item, index));\n    } else if (index > 0) {\n      addString(list, ', ');\n      list.push(renderCallback(item, index));\n    } else {\n      list.push(renderCallback(item, index));\n    }\n  });\n\n  return list;\n};\n\nexport default toCommaSeparatedList;\n"],"sourceRoot":""}